
// import "../candid/common.did";
import service "../candid/hypha.did";

type GrowTreeArgs = record {
    name: text;
    description: text;
};

// Stats that are automatically maintain.
type TreeStats = record {
    created_at: Timestamp;
    updated_at: Timestamp;
    size: nat64;
    stars: nat64;
    watchers: nat64;
};

// Represents a repository.
type Tree = record {
    id: Tree;

    // Metadata
    name: text;
    description: text;

    stat: TreeStats;
};

service : {
    "greet": (text) -> (text) query;
    "whoami": () -> (principal) query;

    "get_trees": () -> (vec Tree) query;
    "grow": (GrowTreeArgs) -> (Tree);

    // Management functionality of a repository.
    // Provides the ability to govern the repository.

    // code manangement, for example push, fetch
    "push": (blob) -> ();
    "fetch": () -> (blob) query;
}